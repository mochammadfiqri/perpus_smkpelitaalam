<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="$this.Icon" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        AAABAAEAIB4AAAEAIACgDwAAFgAAACgAAAAgAAAAPAAAAAEAIAAAAAAAAA8AACMuAAAjLgAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8uuyAPLr
        sgDy67IB8uuyAvLrsgDy67IAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPLrsgDy67IA8uuyEPLr
        sjvy67Js8uuykPLrsqPy67Km8uuymfLrsnzy67JO8uuyHvLrsgPy67IAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPLrsgDy67IA8uuyGvLr
        snDy67LG8uuy8vLrsv/y67L/8uuy//Lrsv/y67L/8uuy//Lrsvry67Lc8uuylfLrsjby67ID8uuyAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADy67IA8uuyBfLr
        slXy67LN8uuy/fLrsv/y67L/8uuy//Lrsv/y67L/8uuy//Lrsv/y67L/8uuy//Lrsv/y67L/8uuy6vLr
        sofy67IX8uuyAPLrsgAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8uuyAPLr
        sgzy67KD8uuy8/Lrsv/y67L/8uuy//Lrsv/y67L/8uuy//Lrsv/y67L/8uuy//Lrsv/y67L/8uuy//Lr
        sv/y67L/8uuy/vLrsrvy67Ir8uuyAPLrsgAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPLr
        sgDy67IK8uuyj/Lrsvvy67L/9O2z//Tts//07bP/9O2z//Tts//07bP/9O2z//Tts//07bP/9O2z//Tt
        s//07bP/9O2z//Tts//z7LL/8uuy//Lrssvy67Is8uuyAPLrsgAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AADy67IA8uuyAvLrsnfy67L68uuy/+3msP/Dv5v/uraW/7q2lv+6tpb/uraW/7q2lv+6tpb/uraW/7q2
        lv+6tpb/u7eX/7u4l/+7uJf/u7iX/9/Zqf/z7LL/8uuy//Lrsrzy67IZ8uuyAAAAAAAAAAAAAAAAAAAA
        AAAAAAAA8uuyAPLrsgDy67JC8uuy6/Lrsv/z7LL/5uCs/4yLgv+MjY7/kJGR/5CRkf+QkZH/kJGR/5CR
        kf+QkZH/kJGR/5CRkf9+f3//c3Nz/3R0dP91dXT/xsGc//Tts//y67L/8uuy//Lrsovy67ID8uuyAAAA
        AAAAAAAAAAAAAAAAAADy67IA8uuyDfLrsrXy67L/8uuy//Pssv/l36v/nJuT/+fn6P/09PT/8/Pz//Pz
        8//z8/P/8/Pz//Pz8//z8/P/8/Pz/83Nzf+Dg4P/dHR0/3Z2df/Gwp3/9O2z//Lrsv/y67L/8uuy6/Lr
        sjzy67IA8uuyAAAAAAAAAAAA8uuyAPLrsgDy67JN8uuy9vLrsv/y67L/8+yy/+Xfq/+dnJT/7e3u//v7
        +//6+vr/+vr6//r6+v/6+vr/+vr6//r6+v/6+vr/8vLy/8vLy/+Dg4P/dHR0/8bCnf/07bP/8uuy//Lr
        sv/y67L/8uuynfLrsgPy67IAAAAAAAAAAADy67IA8uuyAvLrsp7y67L/8uuy//Lrsv/z7LL/5d+r/52c
        lP/t7e7/+/v7//r6+v/6+vr/+vr6//r6+v/6+vr/+vr6//n5+f/y8vL/8PDw/8vLy/+Dg4P/xsGc//Tt
        s//y67L/8uuy//Lrsv/y67Lh8uuyJfLrsgAAAAAAAAAAAPLrsgDy67IZ8uuy1/Lrsv/y67L/8uuy//Ps
        sv/l36v/nZyU/+3t7v/7+/v/+vr6//r6+v/8+/z/+/r7//r6+v/6+vr/+vr6//j4+P/39/f/+fn5/66u
        rf/EwJv/9O2z//Lrsv/y67L/8uuy//Lrsvzy67Ja8uuyAPLrsgAAAAAA8uuyAPLrsjry67Ly8uuy//Lr
        sv/y67L/8+yy/+Xfq/+dnJT/7e3u//v7+//6+vr/+Pn4/8/nzv/q8+n//Pv8//r6+v/6+vr/+vr6//r6
        +v/7+/v/s7Oz/8TAm//07bP/8uuy//Lrsv/y67L/8uuy//Lrsovy67IA8uuyAAAAAADy67IA8uuyVvLr
        sv3y67L/8uuy//Lrsv/z7LL/5d+r/52clP/t7e7/+/v7//r6+v/D4sL/esJ3/43Kiv/d7dz//Pv8//r6
        +v/6+vr/+vr6//v7+/+zs7L/xMCb//Tts//y67L/8uuy//Lrsv/y67L/8uuyq/LrsgPy67IAAAAAAPLr
        sgDy67Jm8uuy//Lrsv/y67L/8uuy//Pssv/l36v/nZyU/+3t7v/7+/v/2ezY/7fdtv/Z7Nj/rtms/4/L
        jP/L5sr/+fr5//v6+//6+vr/+/v7/7Ozsv/EwJv/9O2z//Lrsv/y67L/8uuy//Lrsv/y67K58uuyB/Lr
        sgAAAAAA8uuyAPLrsmXy67L/8uuy//Lrsv/y67L/8+yy/+Xfq/+dnJT/7e3u//j6+P/p8+j/+Pn3//z7
        /P/6+vr/4O/f/7Har//F48P/9Pfz//v6+//7+/v/s7Oy/8TAm//07bP/8uuy//Lrsv/y67L/8uuy//Lr
        srny67IH8uuyAAAAAADy67IA8uuyVvLrsv3y67L/8uuy//Lrsv/z7LL/5d+r/52clP/t7e7/+/v7//v6
        +//6+vr/+vr6//r6+v/8+/z/+Pn4/97u3f/a7Nn/9fj1//z7/P+zs7L/xMCb//Tts//y67L/8uuy//Lr
        sv/y67L/8uuyqvLrsgPy67IAAAAAAPLrsgDy67I58uuy8vLrsv/y67L/8uuy//Pssv/l36v/nZyU/+3t
        7v/7+/v/+vr6//r6+v/6+vr/+vr6//r6+v/6+vr/+/v7//f59//3+ff/+/v8/7Ozsv/EwJv/9O2z//Lr
        sv/y67L/8uuy//Lrsv/y67KK8uuyAPLrsgAAAAAA8uuyAPLrshny67LW8uuy//Lrsv/y67L/8+yy/+Xf
        q/+dnJT/7e3u//v7+//6+vr/+vr6//r6+v/6+vr/+vr6//r6+v/6+vr/+vr6//r6+v/7+/v/s7Oy/8TA
        m//07bP/8uuy//Lrsv/y67L/8uuy/PLrslny67IA8uuyAAAAAADy67IA8uuyAvLrsp3y67L/8uuy//Lr
        sv/z7LL/5d+r/52clP/t7e7/+/v7//r6+v/39/f/9vb2//b29v/29vb/9vb2//b29v/5+fn/+vr6//v7
        +/+zs7L/xMCb//Tts//y67L/8uuy//Lrsv/y67Lg8uuyJPLrsgAAAAAAAAAAAPLrsgDy67IA8uuyS/Lr
        svXy67L/8uuy//Pssv/l36v/m5qT/+nq6//39/j/8/P0/9bW1//Ozs//y8vL/8nJyf/Ozs//0NDR/+rq
        6//39/j/9/f4/7CwsP/Dv5r/9O2z//Lrsv/y67L/8uuy//Lrspry67ID8uuyAAAAAAAAAAAAAAAAAPLr
        sgDy67IM8uuys/Lrsv/y67L/8+yy/+jirf+loo//s7Km/7e2qv+3tqr/srGl/7GwpP+6urX/vr66/7Oy
        qf+xsKT/tbSo/7e2qv+3tqr/oqCU/8/JoP/07bP/8uuy//Lrsv/y67Lq8uuyOvLrsgDy67IAAAAAAAAA
        AAAAAAAA8uuyAPLrsgDy67JA8uuy6fLrsv/y67L/8eqy/+zlrv/p4qz/6eKs/+nirP/p4q3/6OGt/9XR
        tv/Sz7j/4tyw/+nirf/p4qz/6eKs/+nirP/q463/8Omx//Lrsv/y67L/8uuy//Lrsojy67IC8uuyAAAA
        AAAAAAAAAAAAAAAAAAAAAAAA8uuyAPLrsgHy67J08uuy+fLrsv/y67L/8uuy//Lrsv/y67L/8uuy//Lr
        sv/y67L/6eO0/+Pftf/x6rL/8uuy//Lrsv/y67L/8uuy//Lrsv/y67L/8uuy//Lrsv/y67K58uuyF/Lr
        sgAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8uuyAPLrsgny67KL8uuy+vLrsv/y67L/8uuy//Lr
        sv/y67L/8uuy//Lrsv/z7LL/8+yy//Lrsv/y67L/8uuy//Lrsv/y67L/8uuy//Lrsv/y67L/8uuyyPLr
        siry67IA8uuyAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8uuyAPLrsgvy67J+8uuy8fLr
        sv/y67L/8uuy//Lrsv/y67L/8uuy//Lrsv/y67L/8uuy//Lrsv/y67L/8uuy//Lrsv/y67L/8uuy/fLr
        srfy67Ip8uuyAPLrsgAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8uuyAPLr
        sgTy67JR8uuyyvLrsvzy67L/8uuy//Lrsv/y67L/8uuy//Lrsv/y67L/8uuy//Lrsv/y67L/8uuy//Lr
        sufy67KC8uuyFfLrsgDy67IAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAA8uuyAPLrsgDy67IY8uuya/LrssLy67Lw8uuy/vLrsv/y67L/8uuy//Lrsv/y67L/8uuy+PLr
        stny67KQ8uuyMvLrsgPy67IAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAPLrsgDy67IA8uuyDvLrsjfy67Jn8uuyi/Lrsp7y67Kh8uuylPLr
        snby67JK8uuyG/LrsgLy67IAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADy67IA8uuyAPLr
        sgHy67IA8uuyAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAD//n///+AD//+AAP/+AAB//AAAP/gAAB/wAAAP8AAAB+AAAAfgAAADwAAAA8AAAAPAAAADwAAAAcAA
        AAHAAAABwAAAAcAAAAPAAAADwAAAA+AAAAPgAAAH8AAAB/AAAA/4AAAf/AAAP/4AAH//gAD//+AD////
        f/8=
</value>
  </data>
</root>